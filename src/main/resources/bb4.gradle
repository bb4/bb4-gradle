// Copyright by Barry G. Becker, 2013 - 2021. Licensed under MIT License: http://www.opensource.org/licenses/MIT

/**
 * This plugin contains common gradle build configuration for all bb4 projects.
 * Any project on github can include it using
 * apply from: project.buildscript.classLoader.getResource('bb4.gradle').toURI()
 * Both Java and Scala are fully supported. Most projects have been ported to Scala.
 *
 * For now, plugins must still be included using the legacy 'apply' statement it cannot be used in script plugins
 * (see https://docs.gradle.org/7.3/userguide/plugins.html#sec:plugins_block)
 * In a future version of gradlew, we should be able to use the plugins {} syntax here.
 */
apply plugin: 'scala'
apply plugin: 'java-library'
apply plugin: 'project-report'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'signing'

defaultTasks 'build'

/**
 * Secret credentials for Sonatype and signing
 * should be defined in ~/.gradle/gradle.properties if you need them.
 * Only sign the artifacts if it is a final release.
 */
ext {
    scalaVersion = '3.1.0'
    vecmathVersion = '1.3.1'
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
if (!hasProperty('sonatypeUsername')) {
    ext.sonatypeUsername = ''
}
if (!hasProperty('sonatypePassword')) {
    ext.sonatypePassword = ''
}

compileJava {
    options.release = 11
}

/** all bb4 projects use this directory layout. */
sourceSets {
    main {
        java {
            srcDirs = ['source']
        }
        scala {
            srcDirs = ['scala-source']
        }
        resources {
            srcDirs = ['source', 'scala-source']
        }
    }
    test {
        java {
            srcDirs = ['test']
        }
        scala {
            srcDirs = ['scala-test']
        }
        resources {
            srcDirs = ['test', 'scala-test']
        }
    }
}

repositories {
    mavenCentral()

    // this is where thirdparty and bb4 release artifacts will come from
    maven { url "https://repo1.maven.org/maven2/" }
    // Sonatype repo also has released bb4 artifacts
    //maven { url "https://oss.sonatype.org/content/repositories/releases" }
    // The SNAPSHOT releases should come from one of these next two (did it change?)
    maven { url "https://oss.sonatype.org/content/groups/staging" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/"}
    // some thirdparty jars from here
    maven { url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases" }
}

run {
    // allows keyboard input from cmd line
    standardInput = System.in
}

// Suppress javadoc warning when using java 8.
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
        tasks.withType(JavaCompile) {
            options.deprecation = true
        }
        tasks.withType(ScalaCompile) {
            scalaCompileOptions.additionalParameters = [
                    "-encoding", "utf8",
                    "-deprecation", "-unchecked",
                    "-feature",
                    "-language:implicitConversions"
            ]
        }
    }
}

/** check for updates every build */
configurations.all {
    resolutionStrategy {
        if (!project.hasProperty('debugDeps')) {
              // this causes a problem building with gradle 6.2+
              // See https://github.com/gradle/gradle/issues/12392
              //failOnVersionConflict()
        }
        cacheDynamicVersionsFor 0, 'seconds'
        cacheChangingModulesFor 0, 'seconds'
    }
}

// Since Gradle 6 only implementation, api, compileOnly and runtimeOnly configurations should be used
dependencies {

    implementation("org.scala-lang:scala3-library_3:$scalaVersion")
    implementation "java3d:vecmath:$vecmathVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.scalatest:scalatest_3:3.2.10'
    //testImplementation 'org.scalatestplus:junit-4-12_2.13:3.1.0.0' // what is this needed for?

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_3:2.0.1'

    // Used to generate html unit test report (consider switching to flexmark)
    testRuntimeOnly 'org.pegdown:pegdown:1.6.0'
    testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.62.2'
}

// Have the clean task also delete the dist dir if it is there
clean.doFirst {
    delete "${rootDir}/dist/"
}

task copyToLib(type: Copy, dependsOn: jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    description = "Copies the downloaded dependencies to the libs directory so they can be deployed"
    into "build/libs"
    from configurations.runtimeClasspath
}

project.archivesBaseName = project.ext.archivesBaseName
mainClassName = project.ext.mainClass

jar {
    archiveFileName = "${project.archivesBaseName}-${project.version}.jar"
    manifest {
        attributes 'Implementation-Title': project.description,
                'Implementation-Version': project.version,
                'Build-By': "Barry G Becker",
                'Main-Class': mainClassName,
                'Build-Jdk' : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                provider: 'gradle'
    }
}

// Since gradle 7, use
// gradle wrapper --gradle-version 7.x --distribution-type all
// to upgrade to the next version. For example
// ./gradlew wrapper --gradle-version=7.3 --distribution-type all

